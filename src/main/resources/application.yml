lunna:
  app:
    jwtExpirationMs: '86400000'
    jwtSecret: lunnaSecretKey
spring:
  rabbitmq:
    port: '5672'
    host: localhost
    username: administrator
    password: RootL3g3ndary++!
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/cop}
    username: ${JDBC_DATABASE_USERNAME:administrator}
    password: ${JDBC_DATABASE_PASSWORD:RootL3g3ndary++!}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: update
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true

  mvc:
    format:
      date-time: iso

  application:
    name: coop
  docker:
    compose:
      lifecycle-management: start-only
error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
    codes:
      UserUsernameUnique: USER_USERNAME_UNIQUE
      UserEmailUnique: USER_EMAIL_UNIQUE
springdoc:
  pathsToMatch: /, /api/**
server:
  servlet:
    context-path: /api
  port: '9093'

jwt:
  secret: 00B6438ACB74D023B6D80FCB962E92FC

logging:
  level:
    org:
      hibernate: WARN
      springframework:
        web: WARN
    root: WARN
  file:
    name: myapp.log
    max-history: '30'
    max-size: 10MB

